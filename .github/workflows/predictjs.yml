name: Predictjs

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  repository_dispatch:
    types: [predictionjs]  

jobs:

  predictionjs:
    runs-on: ubuntu-latest
    container: adsoft/ai-ops:latest

    steps:
    - uses: actions/checkout@v2
    - run: 'echo "field: ${{github.event.client_payload.MODEL_NAME}}"'

    - name: docker login
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD 
        
    - name: Download and run the Docker base image
      run: docker run -d --name serving_base tensorflow/serving
 
    - name: Download model
      run: wget -O mypredict.json https://firebasestorage.googleapis.com/v0/b/nocode-app-ai.appspot.com/o/code%2Fmypredict.json?alt=media&token=f742da75-627b-4c80-bd48-5668de4f6bf7
#       run:  wget -O prediction.py ${{ github.event.client_payload.codeurl }}
    - name: Download weights
      run:  wget -O mypredict.weights.bin https://firebasestorage.googleapis.com/v0/b/nocode-app-ai.appspot.com/o/code%2Fmypredict.weights.bin?alt=media&token=15d35f77-7ec4-478b-817f-ad74ee0a7104

#    - name: remove base linear_model 
#      run: rm -rf linear_model

    - name: install tensorflowjs
      run: pip install tensorflowjs
      
    - name: convert model 
      run:  tensorflowjs_converter --input_format=tfjs_layers_model --output_format=keras_saved_model ./mypredict.json ${{github.event.client_payload.MODEL_NAME}}/1/
      # ${{github.event.client_payload.MODEL_NAME}}
    - name: show model 
      run:  ls -la mymodel
  
    - name: update docker user in k8 
      run: sed -i 's/{docker_user}/${{secrets.DOCKER_USER}}/g' manifests/linear_model_k8s.yaml

    - name: update model name in k8 
      run: sed -i 's/{model_name}/${{github.event.client_payload.MODEL_NAME}}/g' manifests/linear_model_k8s.yaml

    - name: update _ by - 
      run: sed -i 's/_/-/g' manifests/linear_model_k8s.yaml

    - name: update sha in k8
      run: sed -i 's/{github.sha}/${{ github.sha }}/g' manifests/linear_model_k8s.yaml

    - name: ls -la 
      run: ls -la  
      #cat manifests/linear_model_k8s.yaml

#    - name: Extract model
#      run: unzip linear_model.zip
      
    - name: copy model to the Docker image
      run: docker cp ${{github.event.client_payload.MODEL_NAME}} serving_base:/models/${{github.event.client_payload.MODEL_NAME}}
      
    - name: Build the custom Docker image
      run: docker commit --change "ENV MODEL_NAME ${{github.event.client_payload.MODEL_NAME}}" serving_base ${{secrets.DOCKER_USER}}/tensorflow-${{github.event.client_payload.MODEL_NAME}}:${{ github.sha }}
  
    - name: Docker Push
      run: docker push ${{secrets.DOCKER_USER}}/tensorflow-${{github.event.client_payload.MODEL_NAME}}:${{ github.sha }}
      
    - uses: okteto/context@2.7.0
      with:
        token: ${{secrets.OKTETO_TOKEN }}

 #   - name: Deploy
 #     uses: okteto/pipeline@2.7.0
 #     with:
 #        name: ${{github.event.client_payload.MODEL_NAME}}
 #        timeout: 10m

    - name: Deploy and Wait
      uses: okteto/actions/deploy@v1
      env:
        KUBECONFIG: ${{ steps.namespace.outputs.kubeconfig }}
      with:
        namespace: ${{secrets.OKTETO_NAMESPACE }}
        manifest: manifests/linear_model_k8s.yaml
        tag: ${{ secrets.DOCKER_USERNAME }}/tensorflow_${{github.event.client_payload.MODEL_NAME}}:${{ github.sha }}
